java.lang.IllegalArgumentException: 
Node Node(position=Vector2(x=8, y=3), risk=25, 
parent=Node(position=Vector2(x=7, y=3), risk=22, 
parent=Node(position=Vector2(x=6, y=3), risk=21, 
parent=Node(position=Vector2(x=6, y=4), risk=18, 
parent=Node(position=Vector2(x=5, y=4), risk=17, 
parent=Node(position=Vector2(x=4, y=4), risk=15, 
parent=Node(position=Vector2(x=4, y=3), risk=14, 
parent=Node(position=Vector2(x=3, y=3), risk=9, 
parent=Node(position=Vector2(x=3, y=2), risk=7, 
parent=Node(position=Vector2(x=2, y=2), risk=6, 
parent=Node(position=Vector2(x=1, y=2), risk=3, 
parent=Node(position=Vector2(x=1, y=1), risk=2, 
parent=Node(position=Vector2(x=1, y=0), risk=1, 
parent=Node(position=Vector2(x=0, y=0), risk=0, 
parent=null, visited=true), visited=true), visited=true), visited=true), visited=true), visited=true), visited=true), visited=true), visited=true), visited=true), visited=true), visited=true), visited=true), visited=true) 
is not an element of this graph.
	at com.google.common.graph.StandardValueGraph.checkedConnections(StandardValueGraph.java:162)
	at com.google.common.graph.StandardValueGraph.successors(StandardValueGraph.java:115)
	at com.adventofcode.flashk.day15.dijkstra.ChitonDijkstra.solveA(ChitonDijkstra.java:152)
	at com.adventofcode.flashk.day15.Day15Test.testSolvePart2Input(Day15Test.java:118)
	

Poniendo un breakpoint en el algoritmo de Dijkstra en minNode.setVisited(true):
minNode.getPosition().getX() == 8 && minNode.getPosition().getY() == 3

Se ve que casca justamente en la siguiente línea:
Set<Node> adjacentNodes = graph.successors(minNode);

Ideas: 
Poner otro breakpoint en la creación del grafo para el mismo nodo. y para sus vecinos.

Vectores adyacentes:
[Vector2(x=9, y=3), Vector2(x=7, y=3), Vector2(x=8, y=2), Vector2(x=8, y=4)]

1. Desde 7,3, creamos a 8,3
2. Desde 8,2, reutilizamos el nodo 8,3 creado previamente.
3. Desde 8,3, reutilizamos el nodo 8,3 creado previamente.
4. Desde 8,4, reutilizamos el nodo 8,3 creado previamente.
5. Desde 9,3, reutilizamos el nodo 8,3 creado previamente.


3748800ms -> 

374 	-> too low
3748	-> too high